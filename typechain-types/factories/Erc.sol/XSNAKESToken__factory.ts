/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  XSNAKESToken,
  XSNAKESTokenInterface,
} from "../../Erc.sol/XSNAKESToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "shop",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "shop",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018ca380380620018ca83398181016040528101906200003791906200031c565b6040518060400160405280600c81526020017f58534e414b4553546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f58534e00000000000000000000000000000000000000000000000000000000008152506014838360049081620000b79190620005c8565b508260059081620000c99190620005c8565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011d82826200012860201b60201c565b5050505050620007ca565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b29062000710565b60405180910390fd5b620001cf60008284620002ad60201b60201c565b81600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000220919062000761565b92505081905550816000808282546200023a919062000761565b925050819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620002a19190620007ad565b60405180910390a35050565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002e482620002b7565b9050919050565b620002f681620002d7565b81146200030257600080fd5b50565b6000815190506200031681620002eb565b92915050565b600060208284031215620003355762000334620002b2565b5b6000620003458482850162000305565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003d057607f821691505b602082108103620003e657620003e562000388565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000411565b6200045c868362000411565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004a9620004a36200049d8462000474565b6200047e565b62000474565b9050919050565b6000819050919050565b620004c58362000488565b620004dd620004d482620004b0565b8484546200041e565b825550505050565b600090565b620004f4620004e5565b62000501818484620004ba565b505050565b5b8181101562000529576200051d600082620004ea565b60018101905062000507565b5050565b601f82111562000578576200054281620003ec565b6200054d8462000401565b810160208510156200055d578190505b620005756200056c8562000401565b83018262000506565b50505b505050565b600082821c905092915050565b60006200059d600019846008026200057d565b1980831691505092915050565b6000620005b883836200058a565b9150826002028217905092915050565b620005d3826200034e565b67ffffffffffffffff811115620005ef57620005ee62000359565b5b620005fb8254620003b7565b620006088282856200052d565b600060209050601f8311600181146200064057600084156200062b578287015190505b620006378582620005aa565b865550620006a7565b601f1984166200065086620003ec565b60005b828110156200067a5784890151825560018201915060208501945060208101905062000653565b868310156200069a578489015162000696601f8916826200058a565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f4e6f7420616e206f776e65722100000000000000000000000000000000000000600082015250565b6000620006f8600d83620006af565b91506200070582620006c0565b602082019050919050565b600060208201905081810360008301526200072b81620006e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200076e8262000474565b91506200077b8362000474565b925082820190508082111562000796576200079562000732565b5b92915050565b620007a78162000474565b82525050565b6000602082019050620007c460008301846200079c565b92915050565b6110f080620007da6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461014057806394bf804d1461017057806395d89b411461018c5780639dc29fac146101aa578063a9059cbb146101c6578063dd62ed3e146101e2576100a9565b806306fdde03146100ae57806318160ddd146100cc5780631cc3f95e146100ea57806323b872dd14610106578063313ce56714610122575b600080fd5b6100b6610212565b6040516100c39190610c5a565b60405180910390f35b6100d46102a4565b6040516100e19190610c95565b60405180910390f35b61010460048036038101906100ff9190610d3f565b6102ad565b005b610120600480360381019061011b9190610d7f565b6102bc565b005b61012a61057e565b6040516101379190610c95565b60405180910390f35b61015a60048036038101906101559190610dd2565b610587565b6040516101679190610c95565b60405180910390f35b61018a60048036038101906101859190610dff565b6105d0565b005b610194610744565b6040516101a19190610c5a565b60405180910390f35b6101c460048036038101906101bf9190610d3f565b6107d6565b005b6101e060048036038101906101db9190610d3f565b6108e4565b005b6101fc60048036038101906101f79190610e3f565b610a53565b6040516102099190610c95565b60405180910390f35b60606004805461022190610eae565b80601f016020809104026020016040519081016040528092919081815260200182805461024d90610eae565b801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b5050505050905090565b60008054905090565b6102b8338383610ada565b5050565b8281806102c883610587565b1015610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090610f2b565b60405180910390fd5b610314858585610bc5565b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca90610f97565b60405180910390fd5b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045f9190610fe6565b9250508190555082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104b59190610fe6565b9250508190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050b919061101a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161056f9190610c95565b60405180910390a35050505050565b60006012905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106579061109a565b60405180910390fd5b61066c60008284610bc5565b81600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106bb919061101a565b92505081905550816000808282546106d3919061101a565b925050819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107389190610c95565b60405180910390a35050565b60606005805461075390610eae565b80601f016020809104026020016040519081016040528092919081815260200182805461077f90610eae565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d9061109a565b60405180910390fd5b61087282600083610bc5565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108c19190610fe6565b92505081905550806000808282546108d99190610fe6565b925050819055505050565b3381806108f083610587565b1015610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610f2b565b60405180910390fd5b61093c338585610bc5565b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461098b9190610fe6565b9250508190555082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e1919061101a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a459190610c95565b60405180910390a350505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167faff3b47cb5197ddf5bcfe2c3d50e6d50191056a71b3685eead9df399d9b4b05883604051610bb89190610c95565b60405180910390a3505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c04578082015181840152602081019050610be9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c2c82610bca565b610c368185610bd5565b9350610c46818560208601610be6565b610c4f81610c10565b840191505092915050565b60006020820190508181036000830152610c748184610c21565b905092915050565b6000819050919050565b610c8f81610c7c565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce082610cb5565b9050919050565b610cf081610cd5565b8114610cfb57600080fd5b50565b600081359050610d0d81610ce7565b92915050565b610d1c81610c7c565b8114610d2757600080fd5b50565b600081359050610d3981610d13565b92915050565b60008060408385031215610d5657610d55610cb0565b5b6000610d6485828601610cfe565b9250506020610d7585828601610d2a565b9150509250929050565b600080600060608486031215610d9857610d97610cb0565b5b6000610da686828701610cfe565b9350506020610db786828701610cfe565b9250506040610dc886828701610d2a565b9150509250925092565b600060208284031215610de857610de7610cb0565b5b6000610df684828501610cfe565b91505092915050565b60008060408385031215610e1657610e15610cb0565b5b6000610e2485828601610d2a565b9250506020610e3585828601610cfe565b9150509250929050565b60008060408385031215610e5657610e55610cb0565b5b6000610e6485828601610cfe565b9250506020610e7585828601610cfe565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ec657607f821691505b602082108103610ed957610ed8610e7f565b5b50919050565b7f4e6f7420656e6f75676820746f6b656e73210000000000000000000000000000600082015250565b6000610f15601283610bd5565b9150610f2082610edf565b602082019050919050565b60006020820190508181036000830152610f4481610f08565b9050919050565b7f436865636b20616c6c6f77616e63652100000000000000000000000000000000600082015250565b6000610f81601083610bd5565b9150610f8c82610f4b565b602082019050919050565b60006020820190508181036000830152610fb081610f74565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ff182610c7c565b9150610ffc83610c7c565b925082820390508181111561101457611013610fb7565b5b92915050565b600061102582610c7c565b915061103083610c7c565b925082820190508082111561104857611047610fb7565b5b92915050565b7f4e6f7420616e206f776e65722100000000000000000000000000000000000000600082015250565b6000611084600d83610bd5565b915061108f8261104e565b602082019050919050565b600060208201905081810360008301526110b381611077565b905091905056fea2646970667358221220bfd378f1c39b1ec2ee4694da2592493ecb990f8116d123b881b593c71012caeb64736f6c63430008120033";

type XSNAKESTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XSNAKESTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XSNAKESToken__factory extends ContractFactory {
  constructor(...args: XSNAKESTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    shop: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XSNAKESToken> {
    return super.deploy(shop, overrides || {}) as Promise<XSNAKESToken>;
  }
  override getDeployTransaction(
    shop: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(shop, overrides || {});
  }
  override attach(address: string): XSNAKESToken {
    return super.attach(address) as XSNAKESToken;
  }
  override connect(signer: Signer): XSNAKESToken__factory {
    return super.connect(signer) as XSNAKESToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XSNAKESTokenInterface {
    return new utils.Interface(_abi) as XSNAKESTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XSNAKESToken {
    return new Contract(address, _abi, signerOrProvider) as XSNAKESToken;
  }
}
